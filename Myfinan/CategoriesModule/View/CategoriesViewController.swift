//
//  CategoriesViewController.swift
//  Myfinan
//
//  Created tambanco ü•≥ on 21.03.2022.
//
//  Template generated by Tambanco
//

import UIKit

class CategoriesViewController: UIViewController {

	var presenter: CategoriesPresenterProtocol!
    var categoriesTable: UITableView!
    
	override func viewDidLoad() {
        super.viewDidLoad()
        
        self.setupTableView()
    }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        configureNavigationBar(largeTitleColor: .black, backgoundColor: .clear, tintColor: .black, title: "–ö–∞—Ç–µ–≥–æ—Ä–∏–∏", preferredLargeTitle: true)
    }
    
    func setupTableView() {
        categoriesTable = UITableView(frame: CGRect(x: 0, y: 0, width: self.view.frame.width, height: self.view.frame.height))
        self.view.addSubview(categoriesTable)
        categoriesTable.dataSource = self
        categoriesTable.delegate = self
        categoriesTable.rowHeight = 120

        categoriesTable.register(CategoriesCell.self, forCellReuseIdentifier: CategoriesCell.reuseId)
        
    }
}

// MARK: - Binding
extension CategoriesViewController: CategoriesViewProtocol {
    
}

// MARK: - TableView methods
extension CategoriesViewController: UITableViewDelegate, UITableViewDataSource {
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return 1
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueReusableCell(withIdentifier: CategoriesCell.reuseId, for: indexPath) as! CategoriesCell
        cell.backgroundColor = .blue
        return cell
    }
}

extension UIViewController {
func configureNavigationBar(largeTitleColor: UIColor, backgoundColor: UIColor, tintColor: UIColor, title: String, preferredLargeTitle: Bool) {
    if #available(iOS 13.0, *) {
        let navBarAppearance = UINavigationBarAppearance()
        navBarAppearance.configureWithOpaqueBackground()
        navBarAppearance.largeTitleTextAttributes = [.foregroundColor: largeTitleColor]
        navBarAppearance.titleTextAttributes = [.foregroundColor: largeTitleColor]
        navBarAppearance.backgroundColor = backgoundColor

        navigationController?.navigationBar.standardAppearance = navBarAppearance
        navigationController?.navigationBar.compactAppearance = navBarAppearance
        navigationController?.navigationBar.scrollEdgeAppearance = navBarAppearance

        navigationController?.navigationBar.prefersLargeTitles = preferredLargeTitle
        navigationController?.navigationBar.isTranslucent = false
        navigationController?.navigationBar.tintColor = tintColor
        navigationItem.title = title
        let addItem = UIBarButtonItem(barButtonSystemItem: UIBarButtonItem.SystemItem.add, target: nil, action: #selector(addCategory))
        navigationItem.rightBarButtonItem = addItem

    } else {
        // Fallback on earlier versions
        navigationController?.navigationBar.barTintColor = backgoundColor
        navigationController?.navigationBar.tintColor = tintColor
        navigationController?.navigationBar.isTranslucent = false
        navigationItem.title = title
        }
    }
    @objc func addCategory() {
        var nameField = UITextField()
        let alert = UIAlertController(title: "–î–æ–±–∞–≤—å—Ç–µ –¥–∞–Ω–Ω—ã–µ", message: "", preferredStyle: .alert)
        //placeholders
        alert.addTextField { alertTextField in
            alertTextField.placeholder = "–í–≤–µ–¥–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é"
            nameField = alertTextField
        }
        //action
        let action = UIAlertAction(title: "–î–æ–±–∞–≤–∏—Ç—å", style: .default) { action in
//            let newPerson = Person(context: self.context)
//            let newKid = Kids(context: self.context)
//
//            newPerson.name = self.mainView.nameField.text ?? "empty"
//            newPerson.age = Int64(self.mainView.ageField.text!) ?? 0
//            newKid.kidName = nameField.text ?? "Empty"
//            newKid.kidAge = Int64(ageField.text!) ?? 0
//
//            self.kids.append(newKid)
//            self.person.append(newPerson)
//            self.saveContext()
//            print(self.kids)
            
        }
        alert.addAction(UIAlertAction(title: "–û—Ç–º–µ–Ω–∞", style: .cancel, handler: nil))
        alert.addAction(action)
        present(alert, animated: true, completion: nil)
    }
}
