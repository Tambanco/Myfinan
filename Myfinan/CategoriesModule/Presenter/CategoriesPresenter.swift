//
//  CategoriesPresenter.swift
//  Myfinan
//
//  Created tambanco ü•≥ on 21.03.2022.
//
//  Template generated by Tambanco
//

import Foundation
import UIKit

// MARK: Output protocol
protocol CategoriesViewProtocol: AnyObject {
    func setCategories(categories: [String])
    func configureNavigationBar(largeTitleColor: UIColor, backgoundColor: UIColor, tintColor: UIColor, title: String, preferredLargeTitle: Bool)
    func configureAddButton(addButton: UIBarButtonItem)
}

// MARK: Input protocol
protocol CategoriesPresenterProtocol: AnyObject {
    init(view: CategoriesViewProtocol, model:  CategoriesModel)
    func showCategories()
    func showNavigationBar()
    func showAddButton()
}

class CategoriesPresenter: CategoriesPresenterProtocol {
    
    
    weak var view: CategoriesViewProtocol?
    var model: CategoriesModel
    
    func showAddButton() {
        let addItem = UIBarButtonItem(barButtonSystemItem: .add, target: nil, action: #selector(addCategory))
        self.view?.configureAddButton(addButton: addItem)
    }
    
   
    @objc func addCategory() {
        print("addItem")
//        var textField = UITextField()
//        let alert = UIAlertController(title: "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏", message: "", preferredStyle: .alert)
//        alert.addTextField { alertTextField in
//            alertTextField.placeholder = "–í–≤–µ–¥–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é"
//            textField = alertTextField
//        }
//
//        //action
//        let action = UIAlertAction(title: "–î–æ–±–∞–≤–∏—Ç—å", style: .default) { action in
//            //add action here
//        }
//        alert.addAction((UIAlertAction(title: "–û—Ç–º–µ–Ω–∞", style: .cancel, handler: nil)))
//        alert.addAction(action)
//
    }
    
    func showCategories() {
        self.view?.setCategories(categories: model.category)
    }
    
    func showNavigationBar() {
        self.view?.configureNavigationBar(largeTitleColor: .black, backgoundColor: .systemCyan, tintColor: .black, title: "–ö–∞—Ç–µ–≥–æ—Ä–∏–∏", preferredLargeTitle: true)
    }
    
    required init(view: CategoriesViewProtocol, model: CategoriesModel) {
        self.view = view
        self.model = model
    }
}
